name: Create Container Image

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      APP_PATH: './FunctionProj'
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up .Net
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      
      - name: Build the project
        run: dotnet build ${{ env.APP_PATH }} --configuration Release

      - name: Publish the project
        run: dotnet publish ${{ env.APP_PATH }} --configuration Release --output ${{ env.APP_PATH }}/bin/Release/net6.0
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: function-app
          path: ${{ env.APP_PATH }}/bin/Release/net6.0
  
  push:
    runs-on: ubuntu-latest
    env:
      APP_PATH: './FunctionProj'
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Download artifact for deployment job
        uses: actions/download-artifact@v2
        with:
          name: function-app
          path: release
        
      - name: Login via Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGINSERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: test
        run: |
          pwd
          ls
      
      - name: Docker Build
        run: docker build . -t ${{ secrets.REGISTRY_LOGINSERVER }}/function-app:${{ github.sha }} -f ${{ env.APP_PATH }}/Dockerfile
      
      - name: Docker Push
        run: docker push ${{ secrets.REGISTRY_LOGINSERVER }}/function-app:${{ github.sha }}
